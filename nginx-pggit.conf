# Nginx configuration for pggit.dev
# Solo dev setup - simple and effective

server {
    listen 80;
    server_name pggit.dev www.pggit.dev;
    
    # Redirect to HTTPS (recommended)
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name pggit.dev www.pggit.dev;
    
    # Document root
    root /var/www/pggit.dev;
    index index.html;
    
    # SSL Configuration (update paths for your certificates)
    ssl_certificate /etc/letsencrypt/live/pggit.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pggit.dev/privkey.pem;
    
    # Modern SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Clean URLs - remove .html extension
    location / {
        try_files $uri $uri.html $uri/ =404;
    }
    
    # Cache static assets for performance
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Custom 404 page (optional)
    error_page 404 /404.html;
    
    # Logging
    access_log /var/log/nginx/pggit.dev.access.log;
    error_log /var/log/nginx/pggit.dev.error.log;
    
    # Favicon handling
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    # Robots.txt handling
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
}

# Optional: Block access to sensitive files
location ~ /\. {
    deny all;
}

location ~ ~$ {
    deny all;
}